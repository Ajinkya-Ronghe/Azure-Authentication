<bean id="..." class="...">
    <property name="query" value="SELECT priority, incident_number, short_description, SUM(CASE WHEN LOWER(bridge_type) LIKE &apos;%mim%&apos; THEN 1 ELSE 0 END) AS mim_count, SUM(CASE WHEN LOWER(bridge_type) LIKE &apos;%tech%&apos; OR LOWER(bridge_type) LIKE &apos;%eas%&apos; THEN 1 ELSE 0 END) AS tech_eas_count, SUM(CASE WHEN LOWER(bridge_type) LIKE &apos;%bims%&apos; THEN 1 ELSE 0 END) AS bims_count FROM ceh_incident_master WHERE LOWER(priority) NOT IN (&apos;p1&apos;, &apos;p2&apos;, &apos;p3&apos;) GROUP BY priority, incident_number, short_description"/>
</bean>
<bean id="..." class="...">
    <property name="query" value="SELECT c.priority, c.incident_number, c.short_description, COUNT(CASE WHEN LOWER(i.bridge_type) LIKE &apos;%mim%&apos; THEN 1 END) AS mim_count, COUNT(CASE WHEN LOWER(i.bridge_type) LIKE &apos;%tech%&apos; OR LOWER(i.bridge_type) LIKE &apos;%eas%&apos; THEN 1 END) AS tech_eas_count, COUNT(CASE WHEN LOWER(i.bridge_type) LIKE &apos;%bims%&apos; THEN 1 END) AS bims_count FROM esh_main.ceh_warroom_ongoing_critical_details c LEFT JOIN esh_main.ceh_warroom_incident_details i ON c.incident_number = i.incident_number WHERE LOWER(c.priority) IN (&apos;p1&apos;, &apos;p2&apos;, &apos;p3&apos;) GROUP BY c.priority, c.incident_number, c.short_description"/>
</bean>


SELECT
    c.priority,
    c.incident_number,
    c.short_description,
    COUNT(DISTINCT CASE WHEN LOWER(i.bridge_type) LIKE '%mim%' AND LOWER(i.bridge_status) = 'active' THEN i.incident_number ELSE NULL END) AS mim_count,
    COUNT(DISTINCT CASE WHEN LOWER(i.bridge_type) LIKE '%tech%' AND LOWER(i.bridge_status) = 'active' THEN i.incident_number ELSE NULL END) AS tech_eas_count,
    COUNT(DISTINCT CASE WHEN LOWER(i.bridge_type) LIKE '%bims%' AND LOWER(i.bridge_status) = 'active' THEN i.incident_number ELSE NULL END) AS bims_count
FROM
    esh_main.ceh_warroom_ongoing_critical_details c
LEFT JOIN
    esh_main.ceh_warroom_incident_details i ON c.incident_number = i.incident_number
WHERE
    LOWER(c.priority) IN ('p1', 'p2', 'p3')
GROUP BY
    c.priority, c.incident_number, c.short_description;


https://dtccqa.service-now.com/api/now/table/incident?sysparm_query=number=IM00&sysparm_display_value=true&sysparm_exclude_reference_link=true&sysparm_fields=&sysparm_limit=1



SELECT
    id,
    bridge_type,
    zoom_link,
    bridge_name,
    bridge_description,
    SUM(CASE WHEN LOWER(bridge_type) LIKE '%mim%' AND LOWER(bridge_status) = 'active' THEN 1 ELSE 0 END) AS mim_count,
    SUM(CASE WHEN LOWER(bridge_type) LIKE '%tech%' AND LOWER(bridge_status) = 'active' THEN 1 ELSE 0 END) AS tech_eas_count,
    SUM(CASE WHEN LOWER(bridge_type) LIKE '%bims%' AND LOWER(bridge_status) = 'active' THEN 1 ELSE 0 END) AS bims_count
FROM
    esh_main.ceh_warroom_incident_details
WHERE
    incident_number = 'No Incident'
GROUP BY
    id,
    bridge_type,
    zoom_link,
    bridge_name,
    bridge_description;




SELECT 
    i.priority,
    i.incident_number,
    i.short_description,
    COUNT(DISTINCT CASE WHEN LOWER(i.bridge_type) LIKE 'mim%' AND LOWER(i.bridge_status) = 'active' THEN i.incident_number ELSE NULL END) AS mim_count,
    COUNT(DISTINCT CASE WHEN LOWER(i.bridge_type) LIKE 'tech%' AND LOWER(i.bridge_status) = 'active' THEN i.incident_number ELSE NULL END) AS tech_count,
    COUNT(DISTINCT CASE WHEN LOWER(i.bridge_type) LIKE 'bims%' AND LOWER(i.bridge_status) = 'active' THEN i.incident_number ELSE NULL END) AS bims_count,
    MAX(c.id) as id 
FROM 
    esh_main.ceh_warroom_incident_details i
    LEFT JOIN esh_main.ceh_warroom_ongoing_critical_details c ON i.incident_number = c.incident_number 
    AND LOWER(c.priority) IN ('p1', 'p2', 'p3')
WHERE 
    LOWER(i.priority) IN ('p1', 'p2', 'p3')
    AND LOWER(i.bridge_status) = 'active'
GROUP BY 
    i.priority, 
    i.incident_number, 
    i.short_description;







-- First part of the UNION: Original query, modified to include only records present in both tables
SELECT 
    c.priority,
    c.incident_number,
    c.short_description,
    COUNT(DISTINCT CASE WHEN LOWER(i.bridge_type) LIKE 'mim%' AND LOWER(i.bridge_status) = 'active' THEN i.incident_number ELSE NULL END) AS mim_count,
    COUNT(DISTINCT CASE WHEN LOWER(i.bridge_type) LIKE 'tech%' AND LOWER(i.bridge_status) = 'active' THEN i.incident_number ELSE NULL END) AS tech_count,
    COUNT(DISTINCT CASE WHEN LOWER(i.bridge_type) LIKE 'bims%' AND LOWER(i.bridge_status) = 'active' THEN i.incident_number ELSE NULL END) AS bims_count,
    MAX(i.id) as id 
FROM 
    esh_main.ceh_warroom_ongoing_critical_details c
    JOIN esh_main.ceh_warroom_incident_details i ON c.incident_number = i.incident_number 
WHERE 
    LOWER(c.priority) IN ('p1', 'p2', 'p3')
GROUP BY 
    c.priority, 
    c.incident_number, 
    c.short_description

UNION ALL

-- Second part of the UNION: Incidents from the incident_details table not present in the ongoing_critical_details table
SELECT 
    i.priority,
    i.incident_number,
    i.short_description,
    COUNT(DISTINCT CASE WHEN LOWER(i.bridge_type) LIKE 'mim%' THEN i.incident_number ELSE NULL END) AS mim_count,
    COUNT(DISTINCT CASE WHEN LOWER(i.bridge_type) LIKE 'tech%' THEN i.incident_number ELSE NULL END) AS tech_count,
    COUNT(DISTINCT CASE WHEN LOWER(i.bridge_type) LIKE 'bims%' THEN i.incident_number ELSE NULL END) AS bims_count,
    MAX(i.id) as id 
FROM 
    esh_main.ceh_warroom_incident_details i
WHERE 
    LOWER(i.priority) IN ('p1', 'p2', 'p3')
    AND LOWER(i.bridge_status) = 'active'
    AND NOT EXISTS (
        SELECT 1 
        FROM esh_main.ceh_warroom_ongoing_critical_details c
        WHERE c.incident_number = i.incident_number
    )
GROUP BY 
    i.priority, 
    i.incident_number, 
    i.short_description;


second Qeury:


-- Query for incidents from the ongoing_critical_details table
SELECT 
    c.priority, 
    c.incident_number, 
    c.assigned_manager, 
    c.impacted_ci, 
    c.impacted_buisness_unit, -- corrected column name
    c.short_description AS title,
    c.inc_created_time AS incident_opened, -- assuming this is already a timestamp
    DATE_PART('day', CURRENT_TIMESTAMP - c.inc_created_time) * 86400 + 
    DATE_PART('hour', CURRENT_TIMESTAMP - c.inc_created_time) * 3600 +
    DATE_PART('minute', CURRENT_TIMESTAMP - c.inc_created_time) * 60 + 
    DATE_PART('second', CURRENT_TIMESTAMP - c.inc_created_time) AS incident_duration
FROM 
    esh_main.ceh_warroom_ongoing_critical_details c
WHERE 
    c.priority IN ('P1', 'P2', 'P3')

UNION ALL

-- Query for incidents from the incident_details table not present in the ongoing_critical_details table
SELECT 
    i.priority, 
    i.incident_number, 
    i.assigned_manager, 
    i.impacted_ci, 
    i.impacted_buisness_unit, -- corrected column name
    i.short_description AS title,
    CAST(i.inc_created_time AS timestamp) AS incident_opened, -- casting varchar to timestamp
    DATE_PART('day', CURRENT_TIMESTAMP - CAST(i.inc_created_time AS timestamp)) * 86400 + 
    DATE_PART('hour', CURRENT_TIMESTAMP - CAST(i.inc_created_time AS timestamp)) * 3600 +
    DATE_PART('minute', CURRENT_TIMESTAMP - CAST(i.inc_created_time AS timestamp)) * 60 + 
    DATE_PART('second', CURRENT_TIMESTAMP - CAST(i.inc_created_time AS timestamp)) AS incident_duration
FROM 
    esh_main.ceh_warroom_incident_details i
WHERE 
    i.priority IN ('P1', 'P2', 'P3')
    AND i.bridge_status = 'active'
    AND NOT EXISTS (
        SELECT 1 
        FROM esh_main.ceh_warroom_ongoing_critical_details c
        WHERE c.incident_number = i.incident_number
    )
ORDER BY 
    priority, 
    inc_created_time DESC;



SELECT 
    c.priority,
    c.incident_number,
    c.short_description,
    COALESCE(COUNT(DISTINCT CASE WHEN LOWER(i.bridge_type) LIKE 'mim%' AND LOWER(i.bridge_status) = 'active' THEN i.incident_number ELSE NULL END), 0) AS mim_count,
    COALESCE(COUNT(DISTINCT CASE WHEN LOWER(i.bridge_type) LIKE 'tech%' AND LOWER(i.bridge_status) = 'active' THEN i.incident_number ELSE NULL END), 0) AS tech_count,
    COALESCE(COUNT(DISTINCT CASE WHEN LOWER(i.bridge_type) LIKE 'bims%' AND LOWER(i.bridge_status) = 'active' THEN i.incident_number ELSE NULL END), 0) AS bims_count,
    COALESCE(MAX(i.id), 0) as id 
FROM 
    esh_main.ceh_warroom_ongoing_critical_details c
    LEFT JOIN esh_main.ceh_warroom_incident_details i ON c.incident_number = i.incident_number AND LOWER(i.bridge_status) = 'active'
WHERE 
    LOWER(c.priority) IN ('p1', 'p2', 'p3')
GROUP BY 
    c.priority, 
    c.incident_number, 
    c.short_description;




SELECT
  ceh_itsm.ceh_incident_master.master_reference_id,
  ceh_itsm.ceh_incident_master.severity_id,
  ceh_itsm.ceh_incident_master.short_description,
  esh_main.ceh_warroom_incident_details.zoom_link,
  esh_main.ceh_warroom_incident_details.meeting_initiate_by,
  esh_main.ceh_warroom_incident_details.open_bridge_time,
  esh_main.ceh_warroom_incident_details.assigned_manager,
  esh_main.ceh_warroom_incident_details.inc_created_time,
  esh_main.ceh_warroom_incident_details.impacted_ci,
  esh_main.ceh_warroom_incident_details.bridge_description,
  esh_main.ceh_warroom_incident_details.bridge_type,
  cwl.meeting_id
FROM
  ceh_itsm.ceh_incident_master
JOIN
  esh_main.ceh_warroom_incident_details
  ON ceh_itsm.ceh_incident_master.master_reference_id = esh_main.ceh_warroom_incident_details.incident_number
JOIN
  esh_main.ceh_warroom_zoom_link_details cwl
  ON esh_main.ceh_warroom_incident_details.zoom_id = cwl.zoom_id
WHERE
  ceh_itsm.ceh_incident_master.master_reference_id = :incident_number
  AND esh_main.ceh_warroom_incident_details.bridge_status = 'ACTIVE';







SELECT id, name, email_id, 
  CASE 
    WHEN name = @input_value THEN 1 
    WHEN name LIKE CONCAT('%', @input_value, '%') THEN 2 
    ELSE 3 
  END AS match_preference
FROM (
    SELECT DISTINCT ON (group_name) id, group_name AS name, group_email AS email_id
    FROM esh_main.ceh_snow_oncall_user_details
    WHERE group_name LIKE CONCAT('%', @input_value, '%')
) AS oncall_details

UNION

SELECT id, name, email_id, 
  CASE 
    WHEN name = @input_value THEN 1 
    WHEN name LIKE CONCAT('%', @input_value, '%') THEN 2 
    ELSE 3 
  END AS match_preference
FROM esh_main.ceh_snow_user_details
WHERE name LIKE CONCAT('%', @input_value, '%')

ORDER BY match_preference, name;








